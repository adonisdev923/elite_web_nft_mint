/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/cyber_edp.gltf')
  // const texty = ['e', 'c']
  const texty = []
  texty.push(props.name.cyberName[0])
  let sum = 0

  // if (texty[0] && texty[0].length > 0) {
  //   for (let a = 0; a < texty[0].length; a++) {
  //     groups.push(`<group position={[0, ${a > 0 ? (sum -= 9) : 0}, 0.2]}>
  //     <mesh geometry={nodes['${texty[0][a]}-Local'].geometry} material={materials['${
  //       texty[0][a]
  //     }-Material']} />
  //   </group>`)
  //   }
  // }

  let groups;

  if (texty[0] && texty[0].length > 0) {
     groups = texty[0].map((a, i) => (
      <group key={i} position={[0, `${i > 0 ? (sum -= 9) : 0}`, 0.2]}>
        <mesh geometry={nodes[`${a}-Local`].geometry} material={materials[`${a}-Material`]} />
      </group>
    ))
  }

  console.log(groups)

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI, 8, -Math.PI]} scale={[-1, 1, 1]}>
        <mesh geometry={nodes['cup1-Local'].geometry} material={materials['spray1-Material']} />
        <mesh geometry={nodes['cup2-Local'].geometry} material={materials['spray2-Material']} />

        {/* here text */}
        {groups}

        {/* earth */}
        <group position={[0, 0, 0.2]}>
          <mesh geometry={nodes['icons-Local'].geometry} material={materials['icons-Material']} />
        </group>
        <mesh
          geometry={nodes['cyber-Local'].geometry}
          material={materials['cyber_final-Material']}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/cyber_edp.gltf')
